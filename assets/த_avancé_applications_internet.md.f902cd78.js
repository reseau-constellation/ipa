import{_ as s,c as n,o as a,a as l}from"./app.d3c21b9b.js";const F=JSON.parse('{"title":"Applis Internet","description":"","frontmatter":{},"headers":[{"level":2,"title":"Exemple Vue 3","slug":"exemple-vue-3","link":"#exemple-vue-3","children":[]}],"relativePath":"த/avancé/applications/internet.md"}'),p={name:"த/avancé/applications/internet.md"},e=l(`<h1 id="applis-internet" tabindex="-1">Applis Internet <a class="header-anchor" href="#applis-internet" aria-hidden="true">#</a></h1><p>C&#39;est très facile d&#39;incorporer Constellation à vos applications. Le point important est de créer une seule instance de Constellation qui sera utilisée par toutes les partis de votre appli.</p><h2 id="exemple-vue-3" tabindex="-1">Exemple Vue 3 <a class="header-anchor" href="#exemple-vue-3" aria-hidden="true">#</a></h2><p>Voici un exemple d&#39;extention <a href="https://fr.vuejs.org/" target="_blank" rel="noreferrer">Vue.js 3</a> qui crée une instance de Constellation et la rend disponible à l&#39;ensemble de votre application.</p><div class="language-TypeScript"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// extentions/constellation.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">App</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">mandataire</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@constl/ipa</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">install</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">app</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">App</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">client</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mandataire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ipa</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">générerMandataireProc</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">provide</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">constl</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">client</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>Nous enrégistrerons notre extention lors de la création de l&#39;appli :\`\`\`TypeScript // index.ts import {createApp} from &#39;vue&#39;; import App from &#39;/@/App.vue&#39;; import constellation from &#39;./extentions/constellation.js&#39;;</p><p>const app = createApp(App);</p><p>app.use(constellation);</p><p>app.mount(&#39;#app&#39;);</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Et c&#39;est tout ! Vous pouvez maintenant utiliser Constellation dans l&#39;ensemble de votre appli. Amusez-vous !\`\`\`Vue</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;script setup lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">// composantes/MonCompte.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">import { ref, inject, onMounted, onUnmounted } from &#39;vue&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">import type ClientConstellation from &quot;@constl/ipa&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">const constellation = inject&lt;ClientConstellation&gt;(&#39;constl&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;">const idCompte = ref&lt;string&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">let fOublierIdCompte: () =&gt; Promise&lt;void&gt; | undefined;</span></span>
<span class="line"><span style="color:#A6ACCD;">onMounted(async () =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">    fOublierIdCompte = await constellation.suivreIdBdCompte({ </span></span>
<span class="line"><span style="color:#A6ACCD;">        f: id =&gt; idCompte.value = id</span></span>
<span class="line"><span style="color:#A6ACCD;">    });</span></span>
<span class="line"><span style="color:#A6ACCD;">})</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// Il faut arrêter le suivi lorsque la composante n&#39;est plus utilisée</span></span>
<span class="line"><span style="color:#A6ACCD;">onUnmounted(async () =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">    if (fOublierIdCompte) await fOublierIdCompte();</span></span>
<span class="line"><span style="color:#A6ACCD;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/script&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;template&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;h1&gt;Mon compte : {{ idCompte }}&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/template&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,10),o=[e];function t(c,r,i,C,y,D){return a(),n("div",null,o)}const d=s(p,[["render",t]]);export{F as __pageData,d as default};
