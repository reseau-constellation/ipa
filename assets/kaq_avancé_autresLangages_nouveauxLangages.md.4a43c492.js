import{_ as s,c as n,o as a,a as e}from"./app.1dacbe65.js";const D=JSON.parse('{"title":"Nouveaux langages","description":"","frontmatter":{},"headers":[{"level":2,"title":"Spécification générale","slug":"specification-generale","link":"#specification-generale","children":[{"level":3,"title":"Actions","slug":"actions","link":"#actions","children":[]},{"level":3,"title":"Suivis","slug":"suivis","link":"#suivis","children":[]},{"level":3,"title":"Recherches","slug":"recherches","link":"#recherches","children":[]}]}],"relativePath":"kaq/avancé/autresLangages/nouveauxLangages.md"}'),l={name:"kaq/avancé/autresLangages/nouveauxLangages.md"},o=e(`<h1 id="nouveaux-langages" tabindex="-1">Nouveaux langages <a class="header-anchor" href="#nouveaux-langages" aria-hidden="true">#</a></h1><p>Si vous voulez développer un client Constellation pour un autre langage informatique, vous pouvez utiliser la spécification ci-dessous afin de développer une interface dans le langage de votre choix qui communiquera avec le nœud Constellation.</p><p>Les clients existants (JavaScript, Python, Julia et R) implémentent tous cette interface.</p><h2 id="specification-generale" tabindex="-1">Spécification générale <a class="header-anchor" href="#specification-generale" aria-hidden="true">#</a></h2><p>Le client devra communiquer avec le nœud Constellation par l&#39;entremise de WebSockets. Vous pouvez accéder les fonctions action, de suivi ou de recherche de Constellation. Les actions sont les fonctions qui vous redonnent immédiatement une valeur, tandis que les <a href="./../../ipa/introduction.html#quelques-concepts">fonctions de suivi</a> sont celles qui écoutent les changements du réseau et vous renvoient les nouvelles données en temps réel, au fur et à mesure qu&#39;elles changent.</p><h3 id="actions" tabindex="-1">Actions <a class="header-anchor" href="#actions" aria-hidden="true">#</a></h3><p>Pour invoquer une action Constellation, le client devra envoyer un message de la forme suivante :\`\`\`TypeScript interface MessageActionPourTravailleur extends MessagePourTravailleur { type: &quot;action&quot;; id: string; // Un identifiant unique (qui sera inclut dans le message de retour avec le résultat de la requète) fonction: string[]; // Le nom de la fonction Constellation, en forme de liste args: { [key: string]: unknown }; // Les arguments de la fonction Constellation }</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Il recevra ensuite, du serveur, un message de la forme suivante :\`\`\`TypeScript</span></span>
<span class="line"><span style="color:#A6ACCD;">interface MessageActionDeTravailleur extends MessageDeTravailleur {</span></span>
<span class="line"><span style="color:#A6ACCD;">  type: &quot;action&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;">  id: string;  // Le même identifiant qu&#39;inclus dans le message \`MessageActionPourTravailleur\` originalement envoyé au serveur</span></span>
<span class="line"><span style="color:#A6ACCD;">  résultat: unknown;  // Le résultat de la fonction</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>À titre d&#39;exemple, la fonction suivante de l&#39;<a href="https://github.com/reseau-constellation/ipa" target="_blank" rel="noreferrer">IPA Constellation</a> crée une nouvelle base de données.\`\`\`TypeScript const idBd = await client.bds.créerBd({ licence: &quot;ODbl-1_0&quot; })</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Afin d&#39;invoquer la même fonction par le serveur Constellation, nous enverrons un message comme suit (utilisant le module [uuid](https://www.npmjs.com/package/uuid) pour générer un identifiant unique pour la requète). L&#39;exemple de code est donné en TypeScript, mais pourrait être en n&#39;importe quel</span></span>
<span class="line"><span style="color:#A6ACCD;">langage informatique.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\`\`\`TypeScript</span></span>
<span class="line"><span style="color:#A6ACCD;">import { v4 as uuidv4 } from &#39;uuid&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">const id = uuidv4();</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">const message: MessageActionPourTravailleur = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  type: &quot;action&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  id,</span></span>
<span class="line"><span style="color:#A6ACCD;">  fonction: [&quot;bds&quot;, &quot;créerBd&quot;],</span></span>
<span class="line"><span style="color:#A6ACCD;">  args: { &quot;licence&quot;: &quot;ODbl-1_0&quot; },</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// Envoyer le message par WS au serveur sur le port connecté.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Et nous recevrons une réponse comme tel :</p><div class="language-Json"><button title="Copy Code" class="copy"></button><span class="lang">Json</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">action</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">résultat</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/orbitdb/...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="suivis" tabindex="-1">Suivis <a class="header-anchor" href="#suivis" aria-hidden="true">#</a></h3><p>Les fonctions qui suivent les résultats d&#39;une requète à travers le temps, plutôt que je redonner un résultat ponctuel dans le temps, sont un peu plus compliquées. La fonction suivante suis les noms d&#39;une variable :</p><div class="language-TypeScript"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> idDeMaVariable </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/orbitdb/...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// Selon la variable qui vous intéresse ; générée par \`client.variables.créerVariable\`</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fOublier </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">variables</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">suivreNomsVariable</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> idDeMaVariable</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">f</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">log </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Annuler le suivi</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fOublier</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Pour invoquer la même fonction par le serveur, nous enverrons le message suivant :\`\`\`TypeScript import { v4 as uuidv4 } from &#39;uuid&#39;;</p><p>const id = uuidv4();</p><p>const message: MessageSuivrePourTravailleur = { type: &quot;suivre&quot;, id, fonction: [&quot;variables&quot;, &quot;suivreNomsVariable&quot;], args: { id: idDeMaVariable }, nomArgFonction: &quot;f&quot;, // Nom de l&#39;argument correspondant à la fonction de suivi }</p><p>// Envoyer le message par WS au serveur sur le port connecté.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Et nous recevrons une réponse comme tel lorsque le suivi est amorcé :</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\`\`\`Json</span></span>
<span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;type&quot;: &quot;suivrePrêt&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;id&quot;: &quot;1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Et des messages suiveront avec les résultats en temps réel de la recherche :\`\`\`Json { &quot;type&quot;: &quot;suivre&quot;, &quot;id&quot;: &quot;1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed&quot;, &quot;résultat&quot;: { &quot;fr&quot;: &quot;Précipitation&quot;, &quot;த&quot;: &quot;பொழிவு&quot; } }</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Pour annuler le suivi, envoyer le message suivant :\`\`\`TypeScript</span></span>
<span class="line"><span style="color:#A6ACCD;">const message: MessageRetourPourTravailleur = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  type: &quot;retour&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  id,</span></span>
<span class="line"><span style="color:#A6ACCD;">  fonction: &quot;fOublier&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// Envoyer le message par WS au serveur sur le port connecté.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="recherches" tabindex="-1">Recherches <a class="header-anchor" href="#recherches" aria-hidden="true">#</a></h3><p>Une recherche s&#39;éffectue de manière similaire à un suivi, mais elle retourne également une fonction pour changer le nombre de résultats désirés.</p><div class="language-TypeScript"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  fOublier</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  fChangerN</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">recherche</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rechercherBdSelonNom</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">nomBd</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">météo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">f</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">nRésultatsDésirés</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">30</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Demander plus de résultats</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fChangerN</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">40</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Annuler la recherche</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fOublier</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Pour invoquer la même fonction par le serveur, nous enverrons le message suivant :\`\`\`TypeScript import { v4 as uuidv4 } from &#39;uuid&#39;;</p><p>const id = uuidv4();</p><p>const message: MessageSuivrePourTravailleur = { type: &quot;suivre&quot;, id, fonction: [&quot;recherche&quot;, &quot;rechercherBdSelonNom&quot;], args: { nomBd: &quot;météo&quot;, nRésultatsDésirés: 30 }, nomArgFonction: &quot;f&quot;, // Nom de l&#39;argument correspondant à la fonction de suivi }</p><p>// Envoyer le message par WS au serveur sur le port connecté.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Et nous recevrons une réponse comme suit lorsque la recherche est amorcée :\`\`\`Json</span></span>
<span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;type&quot;: &quot;suivrePrêt&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;id&quot;: &quot;1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;fonctions&quot;: [&quot;fOublier&quot;, &quot;fChangerN&quot;]</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Pour changer le nombre de résultats désirés, il suffit d&#39;envoyer un message comme suit :\`\`\`TypeScript const message: MessageRetourPourTravailleur = { type: &quot;retour&quot;, id, fonction: &quot;fChangerN&quot;, args: [40] }</p><p>// Envoyer le message par WS au serveur sur le port connecté.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">### Erreurs</span></span>
<span class="line"><span style="color:#A6ACCD;">Si le serveur a des difficultés, il enverra un message d&#39;erreur. Le champ \`id\` est facultatif et sera présent si l&#39;erreur provient spécifiquement d&#39;une requète particulière.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\`\`\`Json</span></span>
<span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;type&quot;: &quot;erreur&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;id&quot;: &quot;1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;erreur&quot;: &quot;Message d&#39;erreur tel que rencontré par le serveur.&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,33),p=[o];function t(r,c,i,u,C,y){return a(),n("div",null,p)}const d=s(l,[["render",t]]);export{D as __pageData,d as default};
