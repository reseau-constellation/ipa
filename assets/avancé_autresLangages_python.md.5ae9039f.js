import{_ as s,c as n,o as a,d as l}from"./app.110f9561.js";const C=JSON.parse('{"title":"Python","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Utilisation","slug":"utilisation","link":"#utilisation","children":[{"level":3,"title":"IPA synchrone","slug":"ipa-synchrone","link":"#ipa-synchrone","children":[]},{"level":3,"title":"Fonctions disponibles","slug":"fonctions-disponibles","link":"#fonctions-disponibles","children":[]},{"level":3,"title":"IPA asynchrone","slug":"ipa-asynchrone","link":"#ipa-asynchrone","children":[]}]},{"level":2,"title":"Utilisation avancée","slug":"utilisation-avancee","link":"#utilisation-avancee","children":[{"level":3,"title":"Traitement des erreurs","slug":"traitement-des-erreurs","link":"#traitement-des-erreurs","children":[]}]}],"relativePath":"avancé/autresLangages/python.md"}'),o={name:"avancé/autresLangages/python.md"},e=l(`<h1 id="python" tabindex="-1">Python <a class="header-anchor" href="#python" aria-hidden="true">#</a></h1><p><a href="https://github.com/reseau-constellation/client-python/actions/workflows/test.yaml" target="_blank" rel="noreferrer"><img src="https://github.com/reseau-constellation/client-python/actions/workflows/test.yaml/badge.svg" alt="Paquet Python"></a></p><p>Cette librarie offre un client <a href="https://reseau-constellation.github.io/constellation" target="_blank" rel="noreferrer">Constellation</a> pour <a href="https://python.org" target="_blank" rel="noreferrer">Python</a>. Elle fonctionne en lançant un <a href="https://github.com/reseau-constellation/serveur-ws" target="_blank" rel="noreferrer">serveur ws Constellation</a> local, avec lequel elle gère ensuite la communication par websocket.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h2><p>Vous pouvez installer ConstellationPy avec <code>poetry</code> :</p><p><code>poetry add constellationPy</code></p><p>... ou bien avec <code>pip</code></p><p><code>pip install constellationPy</code></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Si le serveur Constellation n&#39;est pas déjà installé sur votre machine, ConstellationPy l&#39;installera automatiquement pour vous. Pour ce faire, vous devrez au tout minimum avoir <a href="https://nodejs.org/fr/" target="_blank" rel="noreferrer">Node.js</a> installé localement.</p></div><h2 id="utilisation" tabindex="-1">Utilisation <a class="header-anchor" href="#utilisation" aria-hidden="true">#</a></h2><p>ConstellationPy est une libraries <strong>asynchrone</strong> basée sur <a href="https://trio.readthedocs.io" target="_blank" rel="noreferrer">trio</a>. Étant donné que le serveur Constellation est fondamentalement asynchrone aussi, c&#39;était la décision naturelle.</p><p>Cependant, nous comprenons bien que la grande majorité des utilisatrices et utilisateurs de Python n&#39;ont aucune idée de ce qu&#39;est la programmation asynchrone, ni aucun goût ou raison de l&#39;apprendre. C&#39;est pour cela que ConstellationPy vous offre également un IPA synchrone.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Vous ne savez pas ce que « synchrone » ou « asynchrone » veulent dire ? Ne vous en faites pas et utilisez l&#39;IPA synchrone. « Synchrone » est le terme technique pour le style de code « normal » Python que vous connaissez bien. Si vous voulez en savoir plus, <a href="https://adrienjoly.com/cours-nodejs/sync-vs-async.html" target="_blank" rel="noreferrer">voici</a> une belle présentation de la différence entre les deux (en JavaScript).</p></div><h3 id="ipa-synchrone" tabindex="-1">IPA synchrone <a class="header-anchor" href="#ipa-synchrone" aria-hidden="true">#</a></h3><p>En premier lieu, nous devons lancer le serveur Constellation. C&#39;est absolument nécessaire, à moins que vous n&#39;aviez déjà lancé un serveur Constellation <a href="https://github.com/reseau-constellation/serveur-ws/blob/master/README.md#ligne-de-commande" target="_blank" rel="noreferrer">manuellement</a>, lorsque, par exemple, vous voulez exécuter plusieurs codes Python qui utilisent Constellation en parallèle sans dupliquer le serveur (oui, c&#39;est bien possible) !</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Attention ! L&#39;IPA synchrone fonctionne bien pour des petites tâches (p. ex., récupérer un ou deux jeux de données), mais l&#39;IPA asynchrone est beaucoup plus efficace si vous traitez de grands nombres de données ou de requêtes à Constellation. Si vous avez besoin d&#39;accéder beaucoup de différentes bases de données Constellation, peut-être que ça vaudrait la peine, après tout, <a href="https://trio.readthedocs.io/en/stable/tutorial.html" target="_blank" rel="noreferrer">d&#39;apprendre</a> comment utiliser ces drôles de <code>async</code> et <code>await</code> en Python.</p></div><p>Donc, on commence. La façon la plus sure, c&#39;est d&#39;utiliser un bloc <code>with</code>, car celui-ci fermera automatiquement le serveur une fois que vous aurez terminé avec. <strong>Cette syntaxe permettra aussi au client Constellation de détecter automatiquement le port auquel il devra se connecter.</strong></p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Serveur</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ClientSync</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serveur</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClientSync</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appelerUneFonction</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>Vous pouvez aussi lancer le client Constellation manuellement. Cette option est particulièrement utile si vous voulez obtenir les données les plus à jour du réseau. N&#39;oubliez pas que Constellation est un <em>réseau</em> d&#39;utilisatrices et d&#39;utilisateurs comme vous ! Il n&#39;y a donc pas de « serveur central » Constellation en tant que tel pour garder une copie des données. Si les données qui vous intéressent sont sur l&#39;ordinateur ou le téléphone d&#39;une autre participante au réseau, cela peut prendre un peu de temps pour que votre nœud local puisse se connecter à la nuée d&#39;autres nœuds Constellation et reçoive les données les plus récentes. Comme règle générale, le plus longtemps le nœud reste en ligne, le plus de connexions et de données il obtiendra.</p><p>Vous pouvez donc lancer votre nœud local à l&#39;aide de la ligne de commande. Vous pouvez utiliser n&#39;importe quel port libre (ici 5001). Vous pouvez le laisser rouler aussi longtemps que vous voudrez, il y se synchronisera automatiquement avec le réseau Constellation. Tout client pyConstellation que vous lancerez en même temps obtiendra ainsi les données les plus à jour disponibles.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Note : pour installer Constellation pour la première fois, faites rouler le code suivant une seule fois sur votre ordinateur :</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> mettre_constellation_à_jour</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">mettre_constellation_à_jour</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div></div><p>Vous pourrez ensuite invoquer le serveur Constellation ainsi :</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">constl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lancer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--port</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5001</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-b</span></span>
<span class="line"></span></code></pre></div><p>Vous ne savez pas quel port mettre ? Lancez tout simplement <code>constl lancer</code> et puis Constellation vous donnera le numéro du port libre qu&#39;elle aura trouvé.</p><p>Vu que vous avez déjà lancé votre propre serveur Constellation, vous devrez spécifier le port manuellement dans le client :</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> ClientSync</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClientSync</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">port</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">5001</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Note : vous pouvez également spécifier le port du client sur <code>Client</code> et <code>ouvrir_client</code> (voir ci-dessous).</p></div><h3 id="fonctions-disponibles" tabindex="-1">Fonctions disponibles <a class="header-anchor" href="#fonctions-disponibles" aria-hidden="true">#</a></h3><p>Toutes* les fonctions de l&#39;IPA (Interface de programmation d&#39;application) <a href="https://github.com/reseau-constellation/ipa" target="_blank" rel="noreferrer">Constellation</a> sont disponibles.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Note : vous pouvez appeler les fonctions Constellation en forme kebab (<code>ma_fonction</code>, style Python) ou bien chameau (<code>maFonction</code>, style JavaScript). À titre d&#39;exemple :</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> ClientSync</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Serveur</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serveur</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClientSync</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    résultatChameau </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">obtIdOrbite</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    résultat_kebab </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">obt_id_orbite</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">résultatChameau </span><span style="color:#89DDFF;">==</span><span style="color:#82AAFF;"> résultat_kebab</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div></div><p>Vous pouvez également accéder les sous-objets de Constellation (<code>profil</code>, <code>bds</code>, <code>tableaux</code>, et ainsi de suite) :</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> ClientSync</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Serveur</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serveur</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClientSync</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    client</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">profil</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sauvegarder_nom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">langue</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fr</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">nom</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">moi !</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    client</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">bds</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">créer_bd</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">licence</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ODbl-1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="fonctions-bien-commodes" tabindex="-1">Fonctions bien commodes <a class="header-anchor" href="#fonctions-bien-commodes" aria-hidden="true">#</a></h4><p>L&#39;IPA du client Python vous offre aussi quelques fonctions plus commodes qui n&#39;existent pas dans l&#39;IPA original de Constellation :</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> ClientSync</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Serveur</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">id_tableau </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/orbitdb/zdpu...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serveur</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClientSync</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">obt_données_tableau</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id_tableau</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">id_tableau</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>Vous pouvez également obtenir les données en format Pandas, y compris avec les colonnes identifiées selon le nom des variables correspondantes dans la langue de votre choix, si elle est disponible :</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> ClientSync</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Serveur</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">id_tableau </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/orbitdb/zdpu...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serveur</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClientSync</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">obt_données_tableau</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id_tableau</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">id_tableau</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">langues</span><span style="color:#89DDFF;">=[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fr</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">es</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">formatDonnées</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pandas</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p><strong>Quelques points importants</strong></p><ul><li>Les fonctions plus obscures qui prennent plus qu&#39;une autre fonction comme argument (p. ex. <code>client.suivreBdDeFonction</code>) ne fonctionnent pas avec le client Python. Ne vous en faites pas. Elles sont obscures pour une raison. Laissez-les en paix. Vous avez amplement de quoi vous amuser avec le reste de l&#39;IPA.</li><li>Vous <strong>devez</strong> utiliser des paramètres nommés (p. ex., <code>client.bds.créerBd(licence=&quot;ODbl-1.0&quot;)</code>). Si vous ne le faites pas (<code>client.bds.créerBd(&quot;ODbl-1.0&quot;)</code>), ça va vous créer des ennuis. Les noms des paramètres doivent être les mêmes que dans l&#39;IPA Constellation JavaScript (p. ex., l&#39;exemple précédent provient de la version JavaSCript <code>client.bds.créerBd({ licence: &quot;ODbl-1.0&quot; })</code>).</li><li>Avec le client synchrone, les fonctions de suivi (voir ci-dessous) doivent être appelées avec une fonction vide (p. ex., <code>lambda: pass</code> ou bien tout simplement <code>fais_rien</code>) à la place de la fonction de suivi.</li><li>Vous vous demandez où trouver tous ces drôles de « id tableau » pour les bases de données qui vous intéressent ? Il s&#39;agit de l&#39;identifiant unique d&#39;un tableau ou d&#39;une base de données, que vous pouvez récupérer lorsque vous créez la base de données, ou bien visuellement avec l&#39;<a href="https://reseau-constellation.github.io/constellation" target="_blank" rel="noreferrer">appli Constellation</a> (recherchez l&#39;icône lien 🔗).</li></ul><h4 id="fonctions-de-suivi" tabindex="-1">Fonctions de suivi <a class="header-anchor" href="#fonctions-de-suivi" aria-hidden="true">#</a></h4><p>Constellation, dans sa version asynchrone JavaScript, offre des fonctions qui, plutôt que de rendre le résultat immédiatement, <em>suivent</em> le résultat à travers le temps et vous notifient (selon une fonction que vous choisissez) chaque fois que le résultat change. La grande majorité des fonctions utiles de l&#39;IPA de Constellation (p. ex., <code>client.tableaux.suivreDonnées</code>) sont de ce genre.</p><p>Évidemment, ce comportement n&#39;est pas util dans un programme synchrone. Le client synchrone <code>ClientSync</code> s&#39;occupe donc de vous rendre le résultat, sans tracas. Il vous suffira de passer une fonction vide là où la fonction originale s&#39;attendait à avoir la fonction de suivi. Par exemple, si l&#39;on appellerait la fonction comme suit dans Constellation JavaScript,</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tableaux</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">suivreDonnées</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">idTableau</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> id_tableau</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">f</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> fSuivi </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Ici, en Python, nous ferons ainsi :</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> ClientSync</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Serveur</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> fais_rien</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">id_tableau </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/orbitdb/zdpu...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serveur</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClientSync</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    mes_données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">tableaux</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">suivre_données</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id_tableau</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">id_tableau</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">f</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">fais_rien</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="ipa-asynchrone" tabindex="-1">IPA asynchrone <a class="header-anchor" href="#ipa-asynchrone" aria-hidden="true">#</a></h3><p>L&#39;IPA asynchrone doit être utilisée avec <a href="https://trio.readthedocs.io/" target="_blank" rel="noreferrer">trio</a>. Il a les mêmes fonctions que l&#39;IPA synchrone, mais dois être invoqué dans un bloc <code>async with ouvrir_client() as client:</code></p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> trio</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Serveur</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ouvrir_client</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">id_tableau </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/orbitdb/zdpu...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serveur</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ouvrir_client</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">obt_données_tableau</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id_tableau</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">id_tableau</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">données</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            ...</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h4 id="fonctions-de-suivi-et-une-fois" tabindex="-1">Fonctions de suivi et <code>une_fois</code> <a class="header-anchor" href="#fonctions-de-suivi-et-une-fois" aria-hidden="true">#</a></h4><p>Tel que mentionné ci-dessus, la majorité des fonctions utiles de Constellation sont des fonctions de suivi. Nous devons les appeler avec une fonction qui sera invoquée à chaque fois que le résultat sera mis à jour.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> trio</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Serveur</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ouvrir_client</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">id_tableau </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/orbitdb/zdpu...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serveur</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ouvrir_client</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># Suivre les données du réseau pour 15 secondes, et imprimer les résultats au fur et à mesure</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># qu&#39;ils nous parviennent du réseau</span></span>
<span class="line"><span style="color:#A6ACCD;">            oublier_données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">tableaux</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">suivre_données</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id_tableau</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">id_tableau</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">f</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">oublier_données</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># Maintenant on ne recevra plus les mises à jour des données</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>Mais en Python, il est probable que, au lieu de vouloir suivre le résultat de la fonction à travers le temps, vous préférerez obtenir les données présentes et puis poursuivre vos analyses. La fonction <code>une_fois</code> vous permet de faire justement cela :</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> trio</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Serveur</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ouvrir_client</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> une_fois</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">id_tableau </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/orbitdb/zdpu...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serveur</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ouvrir_client</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># On doit définir une fonction auxiliaire qui ne prend que la fonction de suivi</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># en tant qu&#39;argument</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">f_données</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">f</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">tableaux</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">suivre_données</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id_tableau</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">id_tableau</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">f</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">f</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># La fonction \`une_fois\` appellera \`f_données\`, attendra le premier résultat,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># et nous renverra celui-ci.</span></span>
<span class="line"><span style="color:#A6ACCD;">            données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">une_fois</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">f_données</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> client</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> données</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">mes_données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">mes_données</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="utilisation-avancee" tabindex="-1">Utilisation avancée <a class="header-anchor" href="#utilisation-avancee" aria-hidden="true">#</a></h2><p>Voici un exemple un peu plus avancé. Si vous avez plusieurs coroutines Python que vous voulez exécuter en parallèle avec Constellation, vous pouvez créer une pouponnière <code>trio</code> et la réutiliser pour les deux coroutines en invoquant <code>Client</code> directement.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> trio</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Client</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">résultats </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">coroutine1</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">client</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appelerUneFonction</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    résultats</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> données</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">coroutine2</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">client</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appelerUneFonction</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    résultats</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> données</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open_nursery</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> pouponnière</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Client</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">pouponnière</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connecter</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># À ne pas oublier ! Sinon je ne suis pas responsable.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            pouponnière</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start_soon</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">coroutine1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> client</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            pouponnière</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start_soon</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">coroutine2</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> client</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">résultats</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>Ceci peut aussi être utile avec les <a href="https://trio.readthedocs.io/en/stable/reference-core.html#using-channels-to-pass-values-between-tasks" target="_blank" rel="noreferrer">canaux</a> de <code>trio</code> pour communiquer entre les coroutines :</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> trio</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Client</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">id_tableau </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/orbitdb/zdpu...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">coroutine_constellation</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">pouponnière</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">canal_envoie</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Client</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">pouponnière</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connecter</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># À ne pas oublier ! Sinon je ne suis pas responsable.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        données </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">obt_données_tableau</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id_tableau</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">id_tableau</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> canal_envoie</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> canal_envoie</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">données</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">une_autre_coroutine</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">canal_réception</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> canal_réception</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> message </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> canal_réception</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">message</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># En réalité, faire quelque chose d&#39;asynchrone, comme écrire au disque</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open_nursery</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> pouponnière</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        canal_envoie</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> canal_réception </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open_memory_channel</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        pouponnière</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start_soon</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">coroutine_constellation</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> pouponnière</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> canal_envoie</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        pouponnière</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start_soon</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">une_autre_coroutine</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> canal_réception</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="traitement-des-erreurs" tabindex="-1">Traitement des erreurs <a class="header-anchor" href="#traitement-des-erreurs" aria-hidden="true">#</a></h3><p>Vous pouvez aussi initialiser <code>Client</code> avec un canal <code>trio</code> pour recevoir les erreurs. Si le client ou le serveur encontre une erreur, celle-ci sera envoyée au canal erreur au lieu de soulever une erreur et d&#39;arrêter exécution du programme. Cette option peut être utile lorsque vous ne voulez pas qu&#39;une erreur sur une requête arrête toute l&#39;exécution du logiciel.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> trio</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> constellationPy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Serveur</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Client</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">coroutine_client</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">pouponnière</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">canal_envoie_erreur</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> canal_envoie_erreur</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Client</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">pouponnière</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connecter</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">canal_envoie_erreur</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># À ne pas oublier ! Sinon je ne suis pas responsable.</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># Faire quelque chose avec le client</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">coroutine_erreurs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">canal_reçoie_erreurs</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> canal_reçoie_erreurs</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> erreur </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> canal_reçoie_erreurs</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">erreur</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># Ou écrire à un fichier journal sur le disque...</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serveur</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open_nursery</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> pouponnière</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            canal_envoie_erreur</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> canal_reçoie_erreur </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open_memory_channel</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            pouponnière</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start_soon</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">coroutine_client</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> pouponnière</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> canal_envoie_erreur</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            pouponnière</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start_soon</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">coroutine_erreurs</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> canal_reçoie_erreur</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">trio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">principale</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div>`,61),p=[e];function t(c,r,i,y,D,F){return a(),n("div",null,p)}const u=s(o,[["render",t]]);export{C as __pageData,u as default};
