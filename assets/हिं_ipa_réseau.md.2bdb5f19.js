import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.8048b864.js";const m=JSON.parse('{"title":"Réseau","description":"","frontmatter":{},"headers":[],"relativePath":"हिं/ipa/réseau.md","filePath":"हिं/ipa/réseau.md"}'),o={name:"हिं/ipa/réseau.md"},l=e(`<h1 id="reseau" tabindex="-1">Réseau <a class="header-anchor" href="#reseau" aria-label="Permalink to &quot;Réseau&quot;">​</a></h1><p>La section <code>réseau</code> de Constellation permet de réseauter avec d&#39;autres membres du réseau.</p><nav class="table-of-contents"><ul><li><a href="#connexions">Connexions</a><ul><li><a href="#client-reseau-suivreconnexionsmembres-f">client.réseau.suivreConnexionsMembres({ f })</a></li><li><a href="#client-reseau-suivreconnexionsdispositifs-f">client.réseau.suivreConnexionsDispositifs({ f })</a></li><li><a href="#client-reseau-suivreconnexionspostessfip-f">client.réseau.suivreConnexionsPostesSFIP({ f })</a></li><li><a href="#client-reseau-suivrecomptesreseau-f-profondeur-idcomptedebut">client.réseau.suivreComptesRéseau({ f, profondeur, idCompteDébut })</a></li><li><a href="#client-reseau-suivrecomptesreseauetenligne-f-profondeur-idcomptedebut">client.réseau.suivreComptesRéseauEtEnLigne({ f, profondeur, idCompteDébut })</a></li></ul></li><li><a href="#confiance">Confiance</a><ul><li><a href="#client-reseau-faireconfianceaumembre-idcompte">client.réseau.faireConfianceAuMembre({ idCompte })</a></li><li><a href="#client-reseau-neplusfaireconfianceaumembre-idcompte">client.réseau.nePlusFaireConfianceAuMembre({ idCompte })</a></li><li><a href="#client-reseau-bloquermembre-idcompte-prive">client.réseau.bloquerMembre({ idCompte, privé })</a></li><li><a href="#client-reseau-debloquermembre-idcompte">client.réseau.débloquerMembre({ idCompte })</a></li><li><a href="#client-reseau-suivrefiables-f-idcompte">client.réseau.suivreFiables({ f, idCompte })</a></li><li><a href="#client-reseau-suivrebloques-f-idcompte">client.réseau.suivreBloqués({ f, idCompte })</a></li><li><a href="#client-reseau-suivrebloquespubliques-f-idcompte">client.réseau.suivreBloquésPubliques({ f, idCompte })</a></li><li><a href="#client-reseau-suivreconfiancemonreseaupourmembre-idcompte-f">client.réseau.suivreConfianceMonRéseauPourMembre({ idCompte, f, ... })</a></li></ul></li><li><a href="#recherche">Recherche</a><ul><li><a href="#client-reseau-suivrebdsmembre-idcompte-f">client.réseau.suivreBdsMembre({ idCompte, f })</a></li><li><a href="#client-reseau-suivreprojetsmembre-idcompte-f">client.réseau.suivreProjetsMembre({ idCompte, f })</a></li><li><a href="#client-reseau-suivrevariablesmembre-idcompte-f">client.réseau.suivreVariablesMembre({ idCompte, f })</a></li><li><a href="#client-reseau-suivremotsclefsmembre-idcompte-f">client.réseau.suivreMotsClefsMembre({ idCompte, f })</a></li><li><a href="#client-reseau-suivrenueesmembre-idcompte-f">client.réseau.suivreNuéesMembre({ idCompte, f })</a></li><li><a href="#client-reseau-suivrefavorismembre-idcompte-f">client.réseau.suivreFavorisMembre({ idCompte, f })</a></li><li><a href="#client-reseau-suivrefavorisobjet-idobjet-f-profondeur">client.réseau.suivreFavorisObjet({ idObjet, f, profondeur })</a></li><li><a href="#client-reseau-suivrereplications-idobjet-f-profondeur">client.réseau.suivreRéplications({ idObjet, f, profondeur })</a></li></ul></li><li><a href="#protocoles">Protocoles</a><ul><li><a href="#client-reseau-suivreprotocolesmembre-f-idcompte">client.réseau.suivreProtocolesMembre({ f, idCompte })</a></li><li><a href="#client-reseau-suivreprotocolesdispositif-f-iddispositif">client.réseau.suivreProtocolesDispositif({ f, idDispositif })</a></li></ul></li><li><a href="#types">Types</a><ul><li><a href="#types-connexions">Types connexions</a></li><li><a href="#types-replications">Types réplications</a></li></ul></li></ul></nav><h2 id="connexions" tabindex="-1">Connexions <a class="header-anchor" href="#connexions" aria-label="Permalink to &quot;Connexions&quot;">​</a></h2><p>Ces fonctions suivent la connection du compte sur le réseau Constellation.</p><h3 id="client-reseau-suivreconnexionsmembres-f" tabindex="-1"><code>client.réseau.suivreConnexionsMembres({ f })</code> <a class="header-anchor" href="#client-reseau-suivreconnexionsmembres-f" aria-label="Permalink to &quot;\`client.réseau.suivreConnexionsMembres({ f })\`&quot;">​</a></h3><p>Suit les connexions aux autres comptes Constellation.</p><h4 id="parametres" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>f</code></td><td><code>(membres: </code><a href="#types-connexions"><code>statutMembre</code></a> <code>) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des connexions chaque fois que celle-ci est modifiée.</td></tr></tbody></table><h4 id="retour" tabindex="-1">Retour <a class="header-anchor" href="#retour" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple" tabindex="-1">Exemple <a class="header-anchor" href="#exemple" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient, </span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> réseau } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">connexions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">réseau</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">statutMembre</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreConnexionsMembres</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> connexions.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient, </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> réseau } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">connexions</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">réseau</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">statutMembre</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreConnexionsMembres</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> connexions.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivreconnexionsdispositifs-f" tabindex="-1"><code>client.réseau.suivreConnexionsDispositifs({ f })</code> <a class="header-anchor" href="#client-reseau-suivreconnexionsdispositifs-f" aria-label="Permalink to &quot;\`client.réseau.suivreConnexionsDispositifs({ f })\`&quot;">​</a></h3><p>Suit les connexions aux autres dispositifs des comptes Constellation.</p><h4 id="parametres-1" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-1" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>f</code></td><td><code>(dispositifs: </code><a href="#types-connexions"><code>statutDispositif</code></a> <code>) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des connexions chaque fois que celle-ci est modifiée.</td></tr></tbody></table><h4 id="retour-1" tabindex="-1">Retour <a class="header-anchor" href="#retour-1" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-1" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-1" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient, </span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> réseau } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">connexions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">réseau</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">statutDispositif</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreConnexionsDispositifs</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> connexions.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient, </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> réseau } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">connexions</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">réseau</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">statutDispositif</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreConnexionsDispositifs</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> connexions.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivreconnexionspostessfip-f" tabindex="-1"><code>client.réseau.suivreConnexionsPostesSFIP({ f })</code> <a class="header-anchor" href="#client-reseau-suivreconnexionspostessfip-f" aria-label="Permalink to &quot;\`client.réseau.suivreConnexionsPostesSFIP({ f })\`&quot;">​</a></h3><p>Suit les connexions aux autres postes du <a href="https://ipfs.io" target="_blank" rel="noreferrer">Systèmes de fichiers Interplanétaire</a> sur lequel est bâti Constellation.</p><h4 id="parametres-2" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-2" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>f</code></td><td><code>(connexions: { adresse: string; pair: string }[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des connexions chaque fois que celle-ci est modifiée.</td></tr></tbody></table><h4 id="retour-2" tabindex="-1">Retour <a class="header-anchor" href="#retour-2" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-2" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-2" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">connexions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;{ </span><span style="color:#FFAB70;">adresse</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#FFAB70;">pair</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> }[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreConnexionsPostesSFIP</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> connexions.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">connexions</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;{ </span><span style="color:#E36209;">adresse</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#E36209;">pair</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> }[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreConnexionsPostesSFIP</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> connexions.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivrecomptesreseau-f-profondeur-idcomptedebut" tabindex="-1"><code>client.réseau.suivreComptesRéseau({ f, profondeur, idCompteDébut })</code> <a class="header-anchor" href="#client-reseau-suivrecomptesreseau-f-profondeur-idcomptedebut" aria-label="Permalink to &quot;\`client.réseau.suivreComptesRéseau({ f, profondeur, idCompteDébut })\`&quot;">​</a></h3><p>Suit les membres qui font parti du réseau personnel d&#39;un compte (en ligne ou non). Les résultats incluent la profondeur et le niveau de confiance envers chaque membre retrouvé. Une confiance de 0 indique un inconnu, une confiance de 1 une personne de confiance et une valeur négative un compte bloqué.</p><h4 id="parametres-3" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-3" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>f</code></td><td><code>(membres: </code> <a href="#types-connexions"><code>infoMembreRéseau</code></a> <code>[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des connexions chaque fois que celle-ci est modifiée.</td></tr><tr><td><code>profondeur</code></td><td><code>number</code></td><td>La profondeur à rechercher dans le réseau (relatif au compte original).</td></tr><tr><td><code>idCompteDébut</code></td><td>\`string</td><td>undefined\`</td></tr></tbody></table><h4 id="retour-3" tabindex="-1">Retour <a class="header-anchor" href="#retour-3" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-3" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-3" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient, </span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> réseau } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">comptes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">réseau</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">infoMembreRéseau</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreComptesRéseau</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> comptes.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient, </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> réseau } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">comptes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">réseau</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">infoMembreRéseau</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreComptesRéseau</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> comptes.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivrecomptesreseauetenligne-f-profondeur-idcomptedebut" tabindex="-1"><code>client.réseau.suivreComptesRéseauEtEnLigne({ f, profondeur, idCompteDébut })</code> <a class="header-anchor" href="#client-reseau-suivrecomptesreseauetenligne-f-profondeur-idcomptedebut" aria-label="Permalink to &quot;\`client.réseau.suivreComptesRéseauEtEnLigne({ f, profondeur, idCompteDébut })\`&quot;">​</a></h3><p>Suit les membres qui font parti du réseau personnel d&#39;un compte (en ligne ou non) et inclut aussi les membres en ligne (qu&#39;ils fassent parti du réseau personnel ou non). Les résultats incluent la profondeur et le niveau de confiance envers chaque membre retrouvé. Une confiance de 0 indique un inconnu, une confiance de 1 une personne de confiance et une valeur négative un compte bloqué. Une profondeur infinie indique une personne qui ne fait pas partie de votre réseau.</p><h4 id="parametres-4" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-4" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>f</code></td><td><code>(membres: </code> <a href="#types-connexions"><code>infoMembreRéseau</code></a> <code>[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des connexions chaque fois que celle-ci est modifiée.</td></tr><tr><td><code>profondeur</code></td><td><code>number</code></td><td>La profondeur à rechercher dans le réseau (relatif au compte original).</td></tr><tr><td><code>idCompteDébut</code></td><td>\`string</td><td>undefined\`</td></tr></tbody></table><h4 id="retour-4" tabindex="-1">Retour <a class="header-anchor" href="#retour-4" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-4" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-4" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient, </span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> réseau } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">comptes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">réseau</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">infoMembreRéseau</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreComptesRéseauEtEnLigne</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> comptes.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient, </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> réseau } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">comptes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">réseau</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">infoMembreRéseau</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreComptesRéseauEtEnLigne</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> comptes.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="confiance" tabindex="-1">Confiance <a class="header-anchor" href="#confiance" aria-label="Permalink to &quot;Confiance&quot;">​</a></h2><p>Constellation étant un réseau distribué, nous ne pouvons pas simplement effacer les comptes des personnes qui ne sont pas gentilles. Ce que nous pouvons faire, au contraire, est de permettre aux utilisatrices d&#39;identifier des comptes auquels elles font confiance (ou non). <strong>Ces relations de confiances sont transitives</strong> ; c&#39;est-à-dire, indiquer votre confiance ou non envers un compte Constellation affectera la confiance que vos contacts accorderont, eux aussi, à ce compte.</p><div class="tip custom-block"><p class="custom-block-title">CONSEIL</p><p>Si vous développez des interfaces graphiques basées sur Constellation, il est recommendé de ne pas laisser paraître les comptes dont la confiance est inférieure à 0.</p></div><h3 id="client-reseau-faireconfianceaumembre-idcompte" tabindex="-1"><code>client.réseau.faireConfianceAuMembre({ idCompte })</code> <a class="header-anchor" href="#client-reseau-faireconfianceaumembre-idcompte" aria-label="Permalink to &quot;\`client.réseau.faireConfianceAuMembre({ idCompte })\`&quot;">​</a></h3><p>Indique que vous faites confiance à un compte Constellation (<code>confiance = 1</code>).</p><h4 id="parametres-5" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-5" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant de compte à qui faire confiance.</td></tr></tbody></table><h4 id="exemple-5" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-5" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">faireConfianceAuMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idCompte: </span><span style="color:#9ECBFF;">&quot;idCompteDeQuelquUnDeChouette&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">faireConfianceAuMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idCompte: </span><span style="color:#032F62;">&quot;idCompteDeQuelquUnDeChouette&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-neplusfaireconfianceaumembre-idcompte" tabindex="-1"><code>client.réseau.nePlusFaireConfianceAuMembre({ idCompte })</code> <a class="header-anchor" href="#client-reseau-neplusfaireconfianceaumembre-idcompte" aria-label="Permalink to &quot;\`client.réseau.nePlusFaireConfianceAuMembre({ idCompte })\`&quot;">​</a></h3><p>Indique que vous ne faites plus confiance à un compte Constellation (la confiance retournera à 0).</p><h4 id="parametres-6" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-6" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant de compte à qui ne plus faire confiance.</td></tr></tbody></table><h4 id="exemple-6" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-6" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">nePlusFaireConfianceAuMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idCompte: </span><span style="color:#9ECBFF;">&quot;idCompteDeQuelquUnDePasSiChouetteAprèsTout&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">nePlusFaireConfianceAuMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idCompte: </span><span style="color:#032F62;">&quot;idCompteDeQuelquUnDePasSiChouetteAprèsTout&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-bloquermembre-idcompte-prive" tabindex="-1"><code>client.réseau.bloquerMembre({ idCompte, privé })</code> <a class="header-anchor" href="#client-reseau-bloquermembre-idcompte-prive" aria-label="Permalink to &quot;\`client.réseau.bloquerMembre({ idCompte, privé })\`&quot;">​</a></h3><p>Indique que vous voulez bloquer un compte Constellation (<code>confiance = -1</code>).</p><h4 id="parametres-7" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-7" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant de compte à bloquer.</td></tr><tr><td><code>privé</code></td><td>\`boolean</td><td>undefined\`</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">AVERTISSEMENT</p><p>Si le bloquage est publique, tout le monde saura que vous avez bloqué ce compte, et il sera également bloqué chez les personnes qui vous font confiance. Mais la personne qui vous avez bloqué pourrait finir par le savoir (peut-être que ce serait grave, ou bien peut-être pas si grave que ça; je n&#39;en sais rien).</p><p>Si le bloquage est privé, le compte sera bloqué uniquement sur ce dispositif, et vous devrez donc le bloquer à nouveau sur chacun des dispositifs de votre compte.</p></div><h4 id="exemple-7" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-7" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">bloquerMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idCompte: </span><span style="color:#9ECBFF;">&quot;idCompteDeQuelquUnQuiNestVraimentPasGentil&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">bloquerMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idCompte: </span><span style="color:#032F62;">&quot;idCompteDeQuelquUnQuiNestVraimentPasGentil&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-debloquermembre-idcompte" tabindex="-1"><code>client.réseau.débloquerMembre({ idCompte })</code> <a class="header-anchor" href="#client-reseau-debloquermembre-idcompte" aria-label="Permalink to &quot;\`client.réseau.débloquerMembre({ idCompte })\`&quot;">​</a></h3><p>Débloque un compte qui avait été bloqué.</p><h4 id="parametres-8" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-8" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant du compte qu&#39;on veut débloquer.</td></tr></tbody></table><h4 id="exemple-8" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-8" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">confiance</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">débloquerMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idCompte: </span><span style="color:#9ECBFF;">&quot;idCompteDeQuelquUnQuiVientDeSExcuser&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">confiance</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">number</span><span style="color:#24292E;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">débloquerMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idCompte: </span><span style="color:#032F62;">&quot;idCompteDeQuelquUnQuiVientDeSExcuser&quot;</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h3 id="client-reseau-suivrefiables-f-idcompte" tabindex="-1"><code>client.réseau.suivreFiables({ f, idCompte })</code> <a class="header-anchor" href="#client-reseau-suivrefiables-f-idcompte" aria-label="Permalink to &quot;\`client.réseau.suivreFiables({ f, idCompte })\`&quot;">​</a></h3><p>Suit les comptes à qui on fait confiance.</p><h4 id="parametres-9" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-9" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>f</code></td><td><code>(fiables: string[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des comptes auxquels <code>idCompte</code> fait confiance chaque fois que celle-ci est modifiée.</td></tr><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant du compte dont on veut suivre les relations de confiance. Si non spécifié, Constellation utilisera le compte actuel.</td></tr></tbody></table><h4 id="retour-5" tabindex="-1">Retour <a class="header-anchor" href="#retour-5" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-9" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-9" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fiables</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreFiables</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> fiables.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fiables</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreFiables</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> fiables.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivrebloques-f-idcompte" tabindex="-1"><code>client.réseau.suivreBloqués({ f, idCompte })</code> <a class="header-anchor" href="#client-reseau-suivrebloques-f-idcompte" aria-label="Permalink to &quot;\`client.réseau.suivreBloqués({ f, idCompte })\`&quot;">​</a></h3><p>Suit les comptes qui ont été bloqués.</p><h4 id="parametres-10" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-10" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>f</code></td><td><code>(bloqués: { idCompte: string; privé: boolean }[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des comptes qui ont été bloquées par <code>idCompte</code> chaque fois que celle-ci est modifiée.</td></tr><tr><td><code>idCompte</code></td><td>\`string</td><td>undefined\`</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">CONSEIL</p><p>Le champ <code>privé</code> dans les réponses indique si le compte est bloqué de manière privé ou publique (<code>privé = true</code> n&#39;est possible que si <code>idCompte === client.idCompte</code>. )</p></div><h4 id="retour-6" tabindex="-1">Retour <a class="header-anchor" href="#retour-6" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-10" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-10" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bloqués</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;{ </span><span style="color:#FFAB70;">idCompte</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#FFAB70;">privé</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;"> }[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreBloqués</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> bloqués.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bloqués</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;{ </span><span style="color:#E36209;">idCompte</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#E36209;">privé</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;"> }[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreBloqués</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> bloqués.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivrebloquespubliques-f-idcompte" tabindex="-1"><code>client.réseau.suivreBloquésPubliques({ f, idCompte })</code> <a class="header-anchor" href="#client-reseau-suivrebloquespubliques-f-idcompte" aria-label="Permalink to &quot;\`client.réseau.suivreBloquésPubliques({ f, idCompte })\`&quot;">​</a></h3><p>Suit les comptes qui ont été bloqués de manière publique.</p><h4 id="parametres-11" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-11" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>f</code></td><td><code>(bloqués: string[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des comptes qui ont été bloquées par <code>idCompte</code> chaque fois que celle-ci est modifiée.</td></tr><tr><td><code>idCompte</code></td><td>\`string</td><td>undefined\`</td></tr></tbody></table><h4 id="retour-7" tabindex="-1">Retour <a class="header-anchor" href="#retour-7" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-11" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-11" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bloqués</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreBloquésPubliques</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> bloqués.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bloqués</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreBloquésPubliques</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> bloqués.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivreconfiancemonreseaupourmembre-idcompte-f" tabindex="-1"><code>client.réseau.suivreConfianceMonRéseauPourMembre({ idCompte, f, ... })</code> <a class="header-anchor" href="#client-reseau-suivreconfiancemonreseaupourmembre-idcompte-f" aria-label="Permalink to &quot;\`client.réseau.suivreConfianceMonRéseauPourMembre({ idCompte, f, ... })\`&quot;">​</a></h3><p>Suit la confiance de mon réseau envers un compte.</p><h4 id="parametres-12" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-12" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant du compte envers lequel veut suivre le niveau de confiance.</td></tr><tr><td><code>f</code></td><td><code>(bloqués: string[]) =&gt; void</code></td><td>Cette fonction sera appelée avec le niveau de confiance chaque fois que celui-ci est modifiée.</td></tr><tr><td><code>profondeur</code></td><td><code>number</code></td><td>La profondeur de la recherche.</td></tr><tr><td><code>idCompteRéférence</code></td><td>\`string</td><td>undefined\`</td></tr></tbody></table><h4 id="retour-8" tabindex="-1">Retour <a class="header-anchor" href="#retour-8" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-12" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-12" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">confiance</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreConfianceMonRéseauPourMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idCompte: </span><span style="color:#9ECBFF;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> confiance.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">confiance</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">number</span><span style="color:#24292E;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreConfianceMonRéseauPourMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idCompte: </span><span style="color:#032F62;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> confiance.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="recherche" tabindex="-1">Recherche <a class="header-anchor" href="#recherche" aria-label="Permalink to &quot;Recherche&quot;">​</a></h2><p>Ces fonctions servent à visualiser les données d&#39;un autre membre du réseau Constellation. Elles vérifient également que, si la personne en question n&#39;a pas créé l&#39;objet elle-même, qu&#39;elle a bel et bien accepté l&#39;invitation de s&#39;y joindre en tant qu&#39;auteur.</p><div class="tip custom-block"><p class="custom-block-title">CONSEIL</p><p>Les fonctionnalités-ci servent à trouver toutes les données appartement à un membre en particulier. Si vous voulez au contraire rechercher des données du réseau Constellation en entier selon un critère donné, voir la section <a href="./recherche.html"><code>client.recherche</code></a>.</p></div><h3 id="client-reseau-suivrebdsmembre-idcompte-f" tabindex="-1"><code>client.réseau.suivreBdsMembre({ idCompte, f })</code> <a class="header-anchor" href="#client-reseau-suivrebdsmembre-idcompte-f" aria-label="Permalink to &quot;\`client.réseau.suivreBdsMembre({ idCompte, f })\`&quot;">​</a></h3><p>Suit les bases de données appartenant à un utilisateur Constellation, en vérifiant et que la personne a été invitée à être auteur de la base de données, et qu&#39;elle a accepté ladite invitation.</p><h4 id="parametres-13" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-13" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant de compte de la personne d&#39;intérêt.</td></tr><tr><td><code>f</code></td><td><code>(bds: string[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des identifiants des bases de données chaque fois que celle-ci est modifiée.</td></tr></tbody></table><h4 id="retour-9" tabindex="-1">Retour <a class="header-anchor" href="#retour-9" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-13" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-13" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bds</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreBdsMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idCompte: </span><span style="color:#9ECBFF;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> bds.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bds</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreBdsMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idCompte: </span><span style="color:#032F62;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> bds.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivreprojetsmembre-idcompte-f" tabindex="-1"><code>client.réseau.suivreProjetsMembre({ idCompte, f })</code> <a class="header-anchor" href="#client-reseau-suivreprojetsmembre-idcompte-f" aria-label="Permalink to &quot;\`client.réseau.suivreProjetsMembre({ idCompte, f })\`&quot;">​</a></h3><p>Suit les projets appartenant à une utilisatrice Constellation, en vérifiant et que la personne a été invitée à être auteur du projet, et qu&#39;elle a accepté ladite invitation.</p><h4 id="parametres-14" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-14" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant de compte de la personne d&#39;intérêt.</td></tr><tr><td><code>f</code></td><td><code>(projets: string[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des identifiants des projets chaque fois que celle-ci est modifiée.</td></tr></tbody></table><h4 id="retour-10" tabindex="-1">Retour <a class="header-anchor" href="#retour-10" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-14" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-14" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">projets</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreProjetsMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idCompte: </span><span style="color:#9ECBFF;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> projets.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">projets</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreProjetsMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idCompte: </span><span style="color:#032F62;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> projets.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivrevariablesmembre-idcompte-f" tabindex="-1"><code>client.réseau.suivreVariablesMembre({ idCompte, f })</code> <a class="header-anchor" href="#client-reseau-suivrevariablesmembre-idcompte-f" aria-label="Permalink to &quot;\`client.réseau.suivreVariablesMembre({ idCompte, f })\`&quot;">​</a></h3><p>Suit les variables appartenant à une utilisatrice Constellation, en vérifiant et que la personne a été invitée à être auteur de la variable, et qu&#39;elle a accepté ladite invitation.</p><h4 id="parametres-15" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-15" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant de compte de la personne d&#39;intérêt.</td></tr><tr><td><code>f</code></td><td><code>(variables: string[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des identifiants des variables chaque fois que celle-ci est modifiée.</td></tr></tbody></table><h4 id="retour-11" tabindex="-1">Retour <a class="header-anchor" href="#retour-11" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-15" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-15" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">variables</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreVariablesMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idCompte: </span><span style="color:#9ECBFF;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> variables.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">variables</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreVariablesMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idCompte: </span><span style="color:#032F62;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> variables.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivremotsclefsmembre-idcompte-f" tabindex="-1"><code>client.réseau.suivreMotsClefsMembre({ idCompte, f })</code> <a class="header-anchor" href="#client-reseau-suivremotsclefsmembre-idcompte-f" aria-label="Permalink to &quot;\`client.réseau.suivreMotsClefsMembre({ idCompte, f })\`&quot;">​</a></h3><p>Suit les mots-clefs appartenant à une utilisatrice Constellation, en vérifiant et que la personne a été invitée à être auteur du mot-clef, et qu&#39;elle a accepté ladite invitation.</p><h4 id="parametres-16" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-16" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant de compte de la personne d&#39;intérêt.</td></tr><tr><td><code>f</code></td><td><code>(motsClefs: string[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des identifiants des mots-clefs chaque fois que celle-ci est modifiée.</td></tr></tbody></table><h4 id="retour-12" tabindex="-1">Retour <a class="header-anchor" href="#retour-12" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-16" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-16" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">motsClefs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreMotsClefsMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idCompte: </span><span style="color:#9ECBFF;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> motsClefs.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">motsClefs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreMotsClefsMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idCompte: </span><span style="color:#032F62;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> motsClefs.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivrenueesmembre-idcompte-f" tabindex="-1"><code>client.réseau.suivreNuéesMembre({ idCompte, f })</code> <a class="header-anchor" href="#client-reseau-suivrenueesmembre-idcompte-f" aria-label="Permalink to &quot;\`client.réseau.suivreNuéesMembre({ idCompte, f })\`&quot;">​</a></h3><p>Suit les nuées appartenant à une utilisatrice Constellation, en vérifiant et que la personne a été invitée à être auteur du projet, et qu&#39;elle a accepté ladite invitation.</p><h4 id="parametres-17" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-17" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant de compte de la personne d&#39;intérêt.</td></tr><tr><td><code>f</code></td><td><code>(nuées: string[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des identifiants des nuées chaque fois que celle-ci est modifiée.</td></tr></tbody></table><h4 id="retour-13" tabindex="-1">Retour <a class="header-anchor" href="#retour-13" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-17" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-17" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nuées</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreNuéesMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idCompte: </span><span style="color:#9ECBFF;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> nuées.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nuées</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreNuéesMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idCompte: </span><span style="color:#032F62;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> nuées.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivrefavorismembre-idcompte-f" tabindex="-1"><code>client.réseau.suivreFavorisMembre({ idCompte, f })</code> <a class="header-anchor" href="#client-reseau-suivrefavorismembre-idcompte-f" aria-label="Permalink to &quot;\`client.réseau.suivreFavorisMembre({ idCompte, f })\`&quot;">​</a></h3><p>Suit les favoris d&#39;une utilisatrice Constellation.</p><h4 id="parametres-18" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-18" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idCompte</code></td><td><code>string</code></td><td>L&#39;identifiant de compte de la personne d&#39;intérêt.</td></tr><tr><td><code>f</code></td><td><code>(favoris: </code> <a href="./favoris.html#types"><code>ÉlémentFavorisAvecObjet</code></a> <code>[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des favoris chaque fois que celle-ci est modifiée.</td></tr></tbody></table><h4 id="retour-14" tabindex="-1">Retour <a class="header-anchor" href="#retour-14" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-18" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-18" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient, </span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> favoris </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> favo } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">favoris</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">favo</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">ÉlémentFavorisAvecObjet</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreFavorisMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idCompte: </span><span style="color:#9ECBFF;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> favoris.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient, </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> favoris </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> favo } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">favoris</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">favo</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">ÉlémentFavorisAvecObjet</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreFavorisMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idCompte: </span><span style="color:#032F62;">&quot;idCompteDeQuelquUnDautre&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> favoris.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivrefavorisobjet-idobjet-f-profondeur" tabindex="-1"><code>client.réseau.suivreFavorisObjet({ idObjet, f, profondeur })</code> <a class="header-anchor" href="#client-reseau-suivrefavorisobjet-idobjet-f-profondeur" aria-label="Permalink to &quot;\`client.réseau.suivreFavorisObjet({ idObjet, f, profondeur })\`&quot;">​</a></h3><p>Suit les personnes qui ont marqué un objet (base de données, projet, variable ou autre) en tant que favoris.</p><h4 id="parametres-19" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-19" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idObjet</code></td><td><code>string</code></td><td>L&#39;identifiant de l&#39;objet d&#39;intérêt.</td></tr><tr><td><code>f</code></td><td><code>(favoris: ( </code><a href="./favoris.html#types"><code>ÉlémentFavorisAvecObjet</code></a> <code> &amp; {idCompte: string} ) []) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des favoris chaque fois que celle-ci est modifiée.</td></tr><tr><td><code>profondeur</code></td><td><code>number</code></td><td>La profondeur à rechercher dans le réseau (relatif au compte actuel).</td></tr></tbody></table><h4 id="retour-15" tabindex="-1">Retour <a class="header-anchor" href="#retour-15" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-19" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-19" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient, </span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> favoris </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> favo } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">favoris</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;(</span><span style="color:#B392F0;">favo</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">ÉlémentFavorisAvecObjet</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> { </span><span style="color:#FFAB70;">idCompte</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> })[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">idBd</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.bds.</span><span style="color:#B392F0;">créerBd</span><span style="color:#E1E4E8;">({ licence: </span><span style="color:#9ECBFF;">&quot;ODBl-1_0&quot;</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreFavorisMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idObjet: idBd,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> favoris.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">    profondeur: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient, </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> favoris </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> favo } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">favoris</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;(</span><span style="color:#6F42C1;">favo</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">ÉlémentFavorisAvecObjet</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> { </span><span style="color:#E36209;">idCompte</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> })[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">idBd</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.bds.</span><span style="color:#6F42C1;">créerBd</span><span style="color:#24292E;">({ licence: </span><span style="color:#032F62;">&quot;ODBl-1_0&quot;</span><span style="color:#24292E;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreFavorisMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idObjet: idBd,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> favoris.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">    profondeur: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivrereplications-idobjet-f-profondeur" tabindex="-1"><code>client.réseau.suivreRéplications({ idObjet, f, profondeur })</code> <a class="header-anchor" href="#client-reseau-suivrereplications-idobjet-f-profondeur" aria-label="Permalink to &quot;\`client.réseau.suivreRéplications({ idObjet, f, profondeur })\`&quot;">​</a></h3><p>Suit les réplications d&#39;un objet (base de données, projet, variable ou autre) à travers le réseau Constellation. Similaire à <a href="#clientréseausuivrefavorisobjet-idobjet-f-profondeur"><code>client.réseau.suivreFavorisObjet</code></a>, mais inclut aussi de l&#39;information sur la disponibilité en ligne des copies de l&#39;objet.</p><h4 id="parametres-20" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-20" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>idObjet</code></td><td><code>string</code></td><td>L&#39;identifiant de l&#39;objet d&#39;intérêt.</td></tr><tr><td><code>f</code></td><td><code>(favoris: </code><a href="#types-replications"><code>infoRéplications</code></a> <code>) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des réplications chaque fois que celle-ci est modifiée.</td></tr><tr><td><code>profondeur</code></td><td><code>number</code></td><td>La profondeur à rechercher dans le réseau (relatif au compte actuel).</td></tr></tbody></table><h4 id="retour-16" tabindex="-1">Retour <a class="header-anchor" href="#retour-16" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-20" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-20" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient, </span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> réseau } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">réplications</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">réseau</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">infoRéplications</span><span style="color:#E1E4E8;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">idBd</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.bds.</span><span style="color:#B392F0;">créerBd</span><span style="color:#E1E4E8;">({ licence: </span><span style="color:#9ECBFF;">&quot;ODBl-1_0&quot;</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreRéplications</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    idObjet: idBd,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> réplications.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">    profondeur: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient, </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> réseau } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">réplications</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">réseau</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">infoRéplications</span><span style="color:#24292E;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">idBd</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.bds.</span><span style="color:#6F42C1;">créerBd</span><span style="color:#24292E;">({ licence: </span><span style="color:#032F62;">&quot;ODBl-1_0&quot;</span><span style="color:#24292E;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreRéplications</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    idObjet: idBd,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> réplications.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">    profondeur: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="protocoles" tabindex="-1">Protocoles <a class="header-anchor" href="#protocoles" aria-label="Permalink to &quot;Protocoles&quot;">​</a></h2><p>Constellation permet d&#39;initialiser des dispositifs avec une <a href="./client.html#initialisation">liste de protocoles tiers</a>. Ces protocoles permettent à des applications construites sur Constellation de retrouver leurs membres sur le réseau.</p><h3 id="client-reseau-suivreprotocolesmembre-f-idcompte" tabindex="-1"><code>client.réseau.suivreProtocolesMembre({ f, idCompte })</code> <a class="header-anchor" href="#client-reseau-suivreprotocolesmembre-f-idcompte" aria-label="Permalink to &quot;\`client.réseau.suivreProtocolesMembre({ f, idCompte })\`&quot;">​</a></h3><p>Suit les protocoles associés à un membre du réseau Constellation.</p><h4 id="parametres-21" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-21" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>f</code></td><td><code>(protocoles: string[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des protocoles du compte chaque fois que celle-ci est modifiée.</td></tr><tr><td><code>idCompte</code></td><td>\`string</td><td>\\ undefined\`</td></tr></tbody></table><h4 id="retour-17" tabindex="-1">Retour <a class="header-anchor" href="#retour-17" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-21" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-21" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">protocoles</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreProtocolesMembre</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> protocoles.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">protocoles</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreProtocolesMembre</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> protocoles.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="client-reseau-suivreprotocolesdispositif-f-iddispositif" tabindex="-1"><code>client.réseau.suivreProtocolesDispositif({ f, idDispositif })</code> <a class="header-anchor" href="#client-reseau-suivreprotocolesdispositif-f-iddispositif" aria-label="Permalink to &quot;\`client.réseau.suivreProtocolesDispositif({ f, idDispositif })\`&quot;">​</a></h3><p>Suit les protocoles associés à un dispositif sur le réseau Constellation.</p><h4 id="parametres-22" tabindex="-1">Paramètres <a class="header-anchor" href="#parametres-22" aria-label="Permalink to &quot;Paramètres&quot;">​</a></h4><table><thead><tr><th>Nom</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>f</code></td><td><code>(protocoles: string[]) =&gt; void</code></td><td>Cette fonction sera appelée avec la liste des protocoles du compte chaque fois que celle-ci est modifiée.</td></tr><tr><td><code>idDispositif</code></td><td>\`string</td><td>undefined\`</td></tr></tbody></table><h4 id="retour-18" tabindex="-1">Retour <a class="header-anchor" href="#retour-18" aria-label="Permalink to &quot;Retour&quot;">​</a></h4><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Promise&lt;() =&gt; Promise&lt;void&gt;&gt;</code></td><td>Fonction à appeler pour arrêter le suivi.</td></tr></tbody></table><h4 id="exemple-22" tabindex="-1">Exemple <a class="header-anchor" href="#exemple-22" aria-label="Permalink to &quot;Exemple&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { générerClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@constl/ipa&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">générerClient</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">protocoles</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fOublier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.réseau.</span><span style="color:#B392F0;">suivreProtocolesDispositif</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> protocoles.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { générerClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@constl/ipa&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">générerClient</span><span style="color:#24292E;">({});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">protocoles</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fOublier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.réseau.</span><span style="color:#6F42C1;">suivreProtocolesDispositif</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">: </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> protocoles.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-label="Permalink to &quot;Types&quot;">​</a></h2><p>Plusieurs types sont associés avec le réseautage Constellation.</p><h3 id="types-connexions" tabindex="-1">Types connexions <a class="header-anchor" href="#types-connexions" aria-label="Permalink to &quot;Types connexions&quot;">​</a></h3><p>Ces types sont associés avec les connexions du réseau.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">infoMembre</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">idCompte</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">protocoles</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">dispositifs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">infoDispositif</span><span style="color:#E1E4E8;">[];</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">statutMembre</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">infoMembre</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">infoMembre</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">vuÀ</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">infoDispositif</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">idSFIP</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">idDispositif</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">idCompte</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">clefPublique</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">signatures</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> { </span><span style="color:#FFAB70;">id</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#FFAB70;">publicKey</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> };</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">encryption</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> { </span><span style="color:#FFAB70;">type</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#FFAB70;">clefPublique</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> };</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">infoMembreRéseau</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">idCompte</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">profondeur</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">confiance</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">infoMembre</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">idCompte</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">protocoles</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">dispositifs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">infoDispositif</span><span style="color:#24292E;">[];</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">statutMembre</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">infoMembre</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">infoMembre</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">vuÀ</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">infoDispositif</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">idSFIP</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">idDispositif</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">idCompte</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">clefPublique</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">signatures</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> { </span><span style="color:#E36209;">id</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#E36209;">publicKey</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> };</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">encryption</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> { </span><span style="color:#E36209;">type</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#E36209;">clefPublique</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> };</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">infoMembreRéseau</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">idCompte</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">profondeur</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">confiance</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="types-replications" tabindex="-1">Types réplications <a class="header-anchor" href="#types-replications" aria-label="Permalink to &quot;Types réplications&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">infoRéplications</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">membres</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">statutMembre</span><span style="color:#E1E4E8;">[];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">dispositifs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">épingleDispositif</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">idDispositif</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">idCompte</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">vuÀ</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  })[];</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">infoRéplications</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">membres</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">statutMembre</span><span style="color:#24292E;">[];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">dispositifs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">épingleDispositif</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">idDispositif</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">idCompte</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">vuÀ</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  })[];</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,198),p=[l];function t(r,c,i,E,y,d){return a(),n("div",null,p)}const F=s(o,[["render",t]]);export{m as __pageData,F as default};
