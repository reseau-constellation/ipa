import{_ as e,c as a,o as t,d as n}from"./app.9edb1b31.js";const _=JSON.parse('{"title":"Autres langages","description":"","frontmatter":{},"headers":[],"relativePath":"avancé/autresLangages/introduction.md"}'),r={name:"avancé/autresLangages/introduction.md"},s=n('<h1 id="autres-langages" tabindex="-1">Autres langages <a class="header-anchor" href="#autres-langages" aria-hidden="true">#</a></h1><p>Constellation a beau être un projet JavaScript, il est possible d&#39;accéder au réseau distribué à partir de clients en autres langages informatiques. Les clients <a href="./python.html">Python</a> et <a href="./julia.html">Julia</a> sont fonctionnels, et le client R est en progrès.</p><p>Tous ces clients fonctionnent en ouvrant un serveur WS Constellation local sur votre machine. Le client Python, Julia ou autre communiquera ensuite avec ce serveur local par messages WS et vous permettent d&#39;utiliser Constellation dans le langage de votre choix.</p><p>Vous devrez donc toujours installer Constellation sur votre machine avant de pouvoir utiliser les clients d&#39;autres langages. La manière la plus facile est d&#39;installer <a href="https://xn--rseau-constellation-bzb.ca/t%C3%A9l%C3%A9chargements" target="_blank" rel="noreferrer">l&#39;interface graphique</a> et puis d&#39;activer le serveur WS sur la page de configuration. Alternativement, vous pouvez installer le serveur WS de Constellation sans interface graphique. Vous aurez besoin de <a href="https://nodejs.org/fr/" target="_blank" rel="noreferrer">Node.js</a> et de <a href="https://pnpm.io" target="_blank" rel="noreferrer">pnpm</a>.</p><p>Si nécessaire, installer pnpm :</p><p><code>$ npm add -g pnpm</code></p><p>Et puis installer Constellation :</p><p><code>$ pnpm global add -g @constl/ipa @constl/serveur</code></p>',8),o=[s];function l(i,c,u,p,d,g){return t(),a("div",null,o)}const m=e(r,[["render",l]]);export{_ as __pageData,m as default};
